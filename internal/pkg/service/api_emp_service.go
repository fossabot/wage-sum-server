/*
 * Employee wage sum
 *
 * Wage sum - demo application with GO language
 *
 * API version: 1.0.0
 * Contact: lsmhun@github
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package service

import (
	"context"

	db "github.com/lsmhun/wage-sum-server/internal/pkg/db"
	openapi "github.com/lsmhun/wage-sum-server/internal/pkg/openapi"
)

// EmpApiService is a service that implements the logic for the EmpApiServicer
// This service should implement the business logic for every endpoint for the EmpApi API.
// Include any external packages or services that will be required by this service.
type EmpApiService struct {
	empDb db.EmpDb
}

// NewEmpApiService creates a default api service
func NewEmpApiService(e db.EmpDb) openapi.EmpApiServicer {
	return &EmpApiService{
		empDb: e,
	}
}

// GetEmpById - Find employee by ID
func (s *EmpApiService) GetEmpById(ctx context.Context, empId int32) (openapi.ImplResponse, error) {
	// TODO - update GetEmpById with the required logic for this service method.
	// Add api_emp_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Emp{}) or use other options such as http.Ok ...
	//return Response(200, Emp{}), nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return openapi.Response(404, nil), nil

	//return Response(http.StatusNotImplemented, nil), errors.New("GetEmpById method not implemented")
	//empById, err := db.FindEmployeeById(empId)
	//if err != nil {
	//	return openapi.Response(200, empById), nil
	//}
	// todo: better error handling
	//return openapi.Response(http.StatusInternalServerError, nil), err

	// todo: error handling
	empById := s.empDb.FindEmployeeById(int64(empId))
	return openapi.Response(200, empById), nil
}
